<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.demo.domain.mypage.mapper.ResumeMapper">

  
  <select id="findResumeVoByUserSq" resultType="com.example.demo.domain.mypage.vo.ResumeVo">
    SELECT
      RESUME_SQ AS resumeSq,
      RESUME_TTL as resumeTitle
    FROM TBL_RESUME_M
    WHERE USER_SQ = #{userSq}
  </select>
  
   <select id="findResumeNmTtlBySq" resultType="com.example.demo.domain.project.vo.ResumeNmTtlVo">
    SELECT
      RESUME_NM AS resumeNM,
      RESUME_TTL as resumeTtl
    FROM TBL_RESUME_M
    WHERE RESUME_SQ = #{resumeSq}
  </select>
  
  <select id="findRepResumeNmTtlByUserSq" resultType="com.example.demo.domain.project.vo.ResumeSummaryVo">
    SELECT
      RESUME_SQ AS resumeSq,
      RESUME_NM AS resumeNM,
      RESUME_TTL as resumeTtl
    FROM TBL_RESUME_M
    WHERE USER_SQ = #{userSq} AND resume_is_representative_yn = 'Y'
  </select>
    
  <select id="findResumesByUserSq" resultType="Long">
    SELECT
      RESUME_SQ
    FROM TBL_RESUME_M
    WHERE USER_SQ = #{userSq}
  </select>
  
  <select id="findRepResumeByUserSq" resultType="Long">
    SELECT
      RESUME_SQ
    FROM TBL_RESUME_M
    WHERE USER_SQ = #{userSq} AND resume_is_representative_yn = 'Y'
  </select>
  
  <select id="findLatestResumeSqByUserSq" resultType="Long">
	  SELECT resume_sq
	  FROM TBL_RESUME_M
	  WHERE user_sq = #{userSq}
	  ORDER BY resume_created_at_dtm DESC
	  LIMIT 1
  </select>
  
   <select id= "findLatestResumeBySq" resultType="com.example.demo.domain.project.vo.ResumeSummaryVo">
    SELECT
      RESUME_NM AS resumeNm,
      null as resumeTtl,
      null as resumeSq
    FROM TBL_RESUME_M
    WHERE RESUME_SQ = #{resumeSq}
  </select>
  
    <!-- 이력서 등록 -->
	<insert id="insertResume"
	        parameterType="com.example.demo.domain.mypage.dto.request.ResumeRegisterRequest"
	        useGeneratedKeys="true"
	        keyProperty="resumeSq">
	    INSERT INTO TBL_RESUME_M (
	        user_sq,
	        address_sq,
	        resume_ttl,
	      <!--resume_photo_url,-->
	        resume_nm,
	        resume_birth_dt,         
	        resume_phone_num,         
	        resume_email,
	        resume_greeting_txt,
	        resume_is_representative_yn,
	        resume_is_deleted_yn,
	        resume_is_notification_yn,
	        resume_created_at_dtm
	    ) VALUES (
	        #{userSq},
	        #{addressSq},
	        #{resumeTtl},
	     <!--#{resumePhotoUrl},-->  
	        #{resumeNm},
	        #{resumeBirthDt},         
	        #{resumePhoneNum},         
	        #{resumeEmail},
	        #{resumeGreetingTxt},
	        #{resumeIsRepresentativeYn},
	        'N', 
	        #{resumeIsNotificationYn},
	        NOW()
	    )
	</insert>

	<!-- 이력서 전체 조회 (userSq 기준) -->
	<select id="selectAllResumes"
          parameterType="long"
          resultType="com.example.demo.domain.mypage.dto.response.ResumeListResponse">
    SELECT
      resume_sq AS resumeSq,
      resume_ttl AS resumeTtl,
      resume_nm AS resumeNm,
      resume_email AS resumeEmail,
      resume_greeting_txt AS resumeGreetingTxt,
      resume_is_representative_yn AS resumeIsRepresentativeYn,
      resume_created_at_dtm AS resumeCreatedAtDtm
    FROM TBL_RESUME_M
    WHERE user_sq = #{userSq}
      AND resume_is_deleted_yn = 'N'
    ORDER BY resume_sq DESC
	</select>

  <!-- 이력서 상세 조회 -->
	<select id="selectResumeById" parameterType="long"
          resultType="com.example.demo.domain.mypage.dto.response.ResumeRegisterResponse">
        SELECT
	    r.resume_sq AS resumeSq,
	    r.user_sq AS userSq,
	    r.address_sq AS addressSq,
	    r.resume_ttl AS resumeTtl,
	 <!--r.resume_photo_url AS resumePhotoUrl,-->
	    r.resume_nm AS resumeNm,
	    r.resume_birth_dt AS resumeBirthDt,
	    r.resume_phone_num AS resumePhoneNum,
	    r.resume_email AS resumeEmail,
	    r.resume_greeting_txt AS resumeGreetingTxt,
	    r.resume_is_representative_yn AS resumeIsRepresentativeYn,
	    r.resume_is_notification_yn AS resumeIsNotificationYn,
	    r.resume_created_at_dtm AS resumeCreatedAtDtm,
	    a.zonecode AS zonecode,
	    a.address AS address,
	    a.detail_address AS detailAddress,
	    a.sigungu AS sigungu,
	    a.latitude AS latitude,
	    a.longitude AS longitude
	  FROM TBL_RESUME_M r
	  LEFT JOIN TBL_ADDRESS_S a ON r.address_sq = a.address_sq
	  WHERE r.resume_sq = #{resumeSq}
	</select>


  <!--대표이력서 설정-->
  <update id="updateAllRepresentativeN">
    UPDATE TBL_RESUME_M
    SET resume_is_representative_yn = 'N'
    WHERE user_sq = #{userSq}
  </update>
	
  <update id="updateRepresentativeY" parameterType="long">
	UPDATE TBL_RESUME_M
	SET resume_is_representative_yn = 'Y'
	WHERE resume_sq = #{resumeSq}
  </update>

	<!--이력서 수정-->
  <update id="updateResume" parameterType="com.example.demo.domain.mypage.dto.request.ResumeRegisterRequest">
  UPDATE TBL_RESUME_M
  SET
    resume_ttl = #{resumeTtl},
   <!--resume_photo_url = #{resumePhotoUrl},-->
    resume_nm = #{resumeNm},
    resume_birth_dt = #{resumeBirthDt},
    resume_phone_num = #{resumePhoneNum},
    resume_email = #{resumeEmail},
    resume_greeting_txt = #{resumeGreetingTxt},
    resume_is_representative_yn = #{resumeIsRepresentativeYn},
    resume_is_notification_yn = #{resumeIsNotificationYn}
  WHERE resume_sq = #{resumeSq}
  </update>
	
	
	<!--이력서 삭제(softDelete)-->
  <update id="updateDeleteYn" parameterType="long">
	UPDATE TBL_RESUME_M
	SET resume_is_deleted_yn = 'Y'
	WHERE resume_sq = #{resumeSq}
  </update>
  
  
  <!--학력 추가-->
 <insert id="insertEducation" parameterType="com.example.demo.domain.mypage.dto.request.ResumeEducationRequest">
	  INSERT INTO TBL_RESUME_EDUCATION_S (
	    resume_sq,
	    education_school_nm,
	    education_major_nm,
	    education_admission_dt,
	    education_graduation_dt,
	    education_status_cd
	  ) VALUES (
		#{resumeSq},
		#{educationSchoolNm},
	    #{educationMajorNm},
	    #{educationAdmissionDt},
	    #{educationGraduationDt},
	    #{educationStatusCd}
	  )
</insert>
 
  <!--학력전체조회-->
  <select id="selectEducationByResumeSq" parameterType="long"
  resultType="com.example.demo.domain.mypage.dto.response.ResumeEducationResponse">
	  SELECT
	    education_sq AS educationSq,
	    resume_sq AS resumeSq,
	    education_school_nm AS educationSchoolNm,
	    education_major_nm AS educationMajorNm,
	    education_admission_dt AS educationAdmissionDt,
	    education_graduation_dt AS educationGraduationDt,
	    education_status_cd AS educationStatusCd
	  FROM TBL_RESUME_EDUCATION_S
	  WHERE resume_sq = #{resumeSq}
  </select>

<!-- 학력 전체 삭제 (이력서 PK 기준) -->
<delete id="deleteEducationByResumeSq" parameterType="long">
  DELETE FROM TBL_RESUME_EDUCATION_S WHERE resume_sq = #{resumeSq}
</delete>

<!-- 학력 단일 삭제 (학력 PK 기준) -->
<delete id="deleteEducationByEducationSq" parameterType="long">
  DELETE FROM TBL_RESUME_EDUCATION_S WHERE education_sq = #{educationSq}
</delete>
  
<!--학력 수정-->
  <update id="updateEducation" parameterType="com.example.demo.domain.mypage.dto.response.ResumeEducationResponse">
	UPDATE TBL_RESUME_EDUCATION_S
	 SET
	 education_school_nm = #{educationSchoolNm},
    education_major_nm = #{educationMajorNm},
    education_admission_dt = #{educationAdmissionDt},
    education_graduation_dt = #{educationGraduationDt},
    education_status_cd = #{educationStatusCd}
  WHERE education_sq = #{educationSq}
  </update>
  
 
</mapper>