<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.demo.domain.mypage.mapper.ResumeMapper">

  <!-- 이력서 등록 -->
  <insert id="insertResume" parameterType="com.example.demo.domain.mypage.dto.request.ResumeRegisterRequest">
    INSERT INTO TBL_RESUME_M (
	    user_sq,
	    address_sq
	    resume_ttl,
	    resume_nm,
	    resume_email,
	    resume_greeting_txt,
	    resume_is_representative_yn,
	    resume_created_at_dtm
	  ) VALUES (
	    #{userSq},
	    #{addressSq},
	    #{resumeTtl},
	    #{resumeNm},
	    #{resumeEmail},
	    #{resumeGreetingTxt},
	    #{resumeIsRepresentativeYn},
	    NOW()
	  )
  </insert>

  <!-- 이력서 상세 조회 -->
  <select id="selectResumeById" parameterType="long"
          resultType="com.example.demo.domain.mypage.dto.request.ResumeRegisterRequest">
    SELECT
      resume_sq AS resumeSq,
      resume_ttl AS resumeTtl,
      resume_nm AS resumeNm,
      resume_email AS resumeEmail,
      resume_greeting_txt AS resumeGreetingTxt,
      resume_is_representative_yn AS resumeIsRepresentativeYn,
      resume_created_at_dtm AS resumeCreatedAtDtm
    FROM TBL_RESUME_M
    WHERE user_sq = #{userSq}
    ORDER BY resume_sq DESC
  </select>

  <!-- 이력서 전체 조회 (userSq 기준) -->
  <select id="selectAllResumes"
          resultType="com.example.demo.domain.mypage.dto.response.ResumeListResponse">
    SELECT
      resume_sq AS resumeSq,
      resume_ttl AS resumeTtl,
      resume_nm AS resumeNm,
      resume_email AS resumeEmail,
      resume_greeting_txt AS resumeGreetingTxt,
      resume_is_representative_yn AS resumeIsRepresentativeYn,
      resume_created_at_dtm AS resumeCreatedAtDtm
    FROM TBL_RESUME_M
    ORDER BY resume_sq DESC
  </select>
  
	<!--이력서 삭제(softDelete)-->
	<update id="updateDeleteYn" parameterType="long">
		UPDATE TBL_RESUME_M
		SET resume_is_deleted_yn = 'Y'
		WHERE resume_sq = #{resumeSq}
	</update>

	<!--이력서 -->
</mapper>