<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.demo.domain.user.mapper.UserMapper">

  <!-- 1. 지역코드 조회 -->
  <select
    id="selectAreaCodeSqBySigungu" parameterType="string" resultType="long"> SELECT area_code_sq
    FROM TBL_AREA_C WHERE area_sigungu = #{sigungu} LIMIT 1 </select>

  <!-- 2. 주소 INSERT -->
  <insert id="insertAddress"
    parameterType="com.example.demo.domain.user.dto.AddressDTO"
    useGeneratedKeys="true" keyProperty="addressSq"> INSERT INTO TBL_ADDRESS_S ( zonecode, address,
    detail_address, sigungu, latitude, longitude, area_code_sq ) VALUES ( #{zonecode}, #{address},
    #{detailAddress}, #{sigungu}, #{latitude}, #{longitude}, #{areaCodeSq} ) </insert>

  <!-- 3. 사용자 INSERT -->
  <insert
    id="insertUser" parameterType="com.example.demo.domain.user.dto.UserDTO"
    useGeneratedKeys="true" keyProperty="userSq"> INSERT INTO TBL_USER_M ( address_sq, user_id,
    user_email, user_pw, user_nm, user_gender_cd, user_phone_num, user_birth_dt, user_type_cd,
    user_signup_type_cd ) VALUES ( #{addressSq}, #{userId}, #{userEmail}, #{userPw}, #{userNm},
    #{userGenderCd}, #{userPhoneNum}, #{userBirthDt}, #{userTypeCd}, #{userSignupTypeCd} ) </insert>

  <!-- 기업 프로필 INSERT -->
  <insert
    id="insertCompanyProfile"
    parameterType="com.example.demo.domain.user.dto.CompanyProfileDTO"> INSERT INTO TBL_COMPANY_S (
    user_sq, address_sq, company_nm, company_ceo_nm, company_open_dt, company_biz_num,
    company_greeting_txt ) VALUES ( #{userSq}, #{addressSq}, #{companyNm}, #{companyCeoNm},
    #{companyOpenDt}, #{companyBizNum}, #{companyGreetingTxt} ) </insert>

  <!-- 아이디 중복 확인 -->
  <select id="existsByUserId"
    parameterType="string" resultType="boolean"> SELECT EXISTS ( SELECT 1 FROM TBL_USER_M WHERE
    user_id = #{userId} AND user_is_deleted_yn = 'N' ) </select>

  <!-- 이메일 중복 확인 -->
  <select id="existsByUserEmail"
    parameterType="string" resultType="boolean"> SELECT EXISTS ( SELECT 1 FROM TBL_USER_M WHERE
    user_email = #{userEmail} AND user_is_deleted_yn = 'N' ) </select>

  <!-- 휴대폰 번호 중복 확인 -->
  <select
    id="existsByUserPhoneNum" parameterType="string" resultType="boolean"> SELECT EXISTS ( SELECT 1
    FROM TBL_USER_M WHERE user_phone_num = #{userPhoneNum} AND user_is_deleted_yn = 'N' ) </select>


  <!-- JWT 토큰 -->

  <select
    id="findByUserId" parameterType="string"
    resultType="com.example.demo.domain.user.dto.UserDTO"> SELECT user_sq AS userSq, user_id AS
    userId, user_email AS userEmail, user_pw AS userPw, user_nm AS userNm, user_type_cd AS
    userTypeCd, user_refresh_token AS userRefreshToken FROM TBL_USER_M WHERE user_id = #{userId} AND
    user_is_deleted_yn = 'N' </select>

  <update id="updateRefreshToken"> UPDATE TBL_USER_M SET user_refresh_token = #{refreshToken},
    user_modified_at_dtm = NOW() WHERE user_sq = #{userSq} </update>

  <select
    id="findByRefreshToken" parameterType="string"
    resultType="com.example.demo.domain.user.dto.UserDTO"> SELECT user_sq, address_sq, user_id,
    user_email, user_pw, user_nm, user_gender_cd, user_phone_num, user_birth_dt, user_type_cd,
    user_signup_type_cd, user_profile_image_url, user_agreed_privacy_policy_yn, user_created_at_dtm,
    user_modified_at_dtm, user_is_deleted_yn, user_refresh_token FROM TBL_USER_M WHERE
    user_refresh_token = #{refreshToken} AND user_is_deleted_yn = 'N' </select>

  <select
    id="findUserInfoByUserSq" parameterType="long"
    resultType="com.example.demo.domain.user.dto.response.LoginResponseDTO"> SELECT user_nm AS
    userNm, user_type_cd AS userTypeCd FROM TBL_USER_M WHERE user_sq = #{userSq} AND
    user_is_deleted_yn = 'N' </select>

  <update id="deleteRefreshTokenByUserSq" parameterType="long"> UPDATE TBL_USER_M SET
    user_refresh_token = NULL WHERE user_sq = #{userSq} </update>


  <!-- 아이디 찾기 -->

  <select id="findUserInfoByNameAndEmail" parameterType="map" resultType="map"> SELECT user_id AS
    userId, user_nm AS userNm, user_type_cd AS userTypeCd, user_created_at_dtm AS userCreatedAtDtm
    FROM TBL_USER_M WHERE user_nm = #{name} AND user_email = #{email} AND user_is_deleted_yn = 'N' </select>

  <select id="findCommonCodeNameByCodeSq" parameterType="long" resultType="string"> SELECT
    common_code_nm FROM TBL_COMMON_CODE_C WHERE common_code_sq = #{codeSq} AND
    common_code_is_active_yn = 'Y' </select>


  <select id="findUserByInfo" parameterType="map"
    resultType="com.example.demo.domain.user.dto.UserDTO"> SELECT * FROM TBL_USER_M WHERE user_id =
    #{userId} AND user_nm = #{userNm} AND user_email = #{userEmail} AND user_is_deleted_yn = 'N' </select>
</mapper>